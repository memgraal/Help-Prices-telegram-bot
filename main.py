from telebot import TeleBot
from telebot import types
from telebot.types import Message
from products import Perecrestok, SevenSteps


bot = TeleBot(token = "6611539409:AAFc2AgxMZc-LnsHXnuVMYQR98p4vXFGAyo")


@bot.message_handler(commands = ['start', 'hello'])
def start(message : Message) -> None:
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
    markup.row("–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤")

    bot.send_message(chat_id = message.chat.id,
                    text = f"""–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}, —ç—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—Ö–æ–¥–∏—Ç—å –≤—ã–≥–æ–¥–Ω—ã–µ\n–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Ç–æ–≤–∞—Ä—ã –≤ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö C–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞""", 
                    reply_markup = markup)


@bot.message_handler(regexp = "–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤")
def Show_categories(message : Message) -> None:
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
    markup.row("–ú–æ–ª–æ–∫–æ"); markup.row("–°—ã—Ä"); markup.row("–•–ª–µ–±"); markup.row("–ö–∞—Ä—Ç–æ—à–∫–∞")
    
    bot.send_message(chat_id = message.chat.id,
                    text = "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π",
                    reply_markup = markup)

@bot.message_handler(regexp = "–ù–∞–∑–∞–¥")
def get_back(message : Message) -> None:
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
    markup.row("–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤")
    bot.send_message(chat_id = message.chat.id,
                    text = "üí•",
                    reply_markup = markup)

@bot.message_handler(regexp = "–ú–æ–ª–æ–∫–æ")
def milk(message : Message) -> None:
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
    markup.row("–ù–∞–∑–∞–¥")
    
    #                                      –ú–ê–ì–ê–ó–ò–ù  –ü–ï–†–ï–ö–†–ï–°–¢–û–ö
    bot.send_message(chat_id = message.chat.id,
                        text = "*–ú–∞–≥–∞–∑–∏–Ω : –ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–æ–∫*",
                        reply_markup = markup,
                        parse_mode='Markdown')
        
    for counter, product in enumerate(Perecrestok().P_Parse_milk()[::-1]):        # –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —É–≤–∏–¥–µ—Ç—å —Ç–æ–ª—å–∫–æ 4 –ø–µ—Ä–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π 
        if counter >= 4: break

        keyboard = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text = "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –º–∞–≥–∞–∑–∏–Ω–∞", url = f"https://spb.perekrestok.ru{product[2]}")
        keyboard.add(url_button)

        bot.send_photo(chat_id = message.chat.id,
                        photo = f"{product[3]}",
                        caption = f"""{product[0][0]}\n
                            –ú–∞–≥–∞–∑–∏–Ω : –ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–æ–∫
                            {product[1][0]} : {product[1][1]}""",
                        reply_markup = keyboard)
            
    #                                      –ú–ê–ì–ê–ó–ò–ù 7–®–ê–ì–û–§–§

    bot.send_message(chat_id = message.chat.id,
                        text = "*–ú–∞–≥–∞–∑–∏–Ω : 7—à–∞–≥–æ—Ñ—Ñ*",
                        parse_mode='Markdown')
        
    for counter, product in enumerate(SevenSteps().S_Parse_milk()):        # –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —É–≤–∏–¥–µ—Ç—å —Ç–æ–ª—å–∫–æ 4 –ø–µ—Ä–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π 
        if counter >= 3: break

        keyboard = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –º–∞–≥–∞–∑–∏–Ω–∞", url = f"https://semishagoff.org{product[2]}")
        keyboard.add(url_button)

        bot.send_photo(chat_id = message.chat.id,
                        photo = f"https://semishagoff.org{product[3]}",
                        caption = f"""{product[0]}\n
                        –ú–∞–≥–∞–∑–∏–Ω : 7—à–∞–≥–æ—Ñ—Ñ
                        –¶–µ–Ω–∞ : {product[1]}""",
                        reply_markup = keyboard)

@bot.message_handler(regexp = "–°—ã—Ä")
def cheese(message : Message) -> None:
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
    markup.row("–ù–∞–∑–∞–¥")
    
    #                                      –ú–ê–ì–ê–ó–ò–ù  –ü–ï–†–ï–ö–†–ï–°–¢–û–ö
    bot.send_message(chat_id = message.chat.id,
                        text = "*–ú–∞–≥–∞–∑–∏–Ω : –ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–æ–∫*",
                        reply_markup = markup,
                        parse_mode='Markdown')
        
    for counter, product in enumerate(Perecrestok().P_Parse_cheese()[::-1]):        # –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —É–≤–∏–¥–µ—Ç—å —Ç–æ–ª—å–∫–æ 4 –ø–µ—Ä–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π 
        if counter >= 4: break

        keyboard = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text = "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –º–∞–≥–∞–∑–∏–Ω–∞", url = f"https://spb.perekrestok.ru{product[2]}")
        keyboard.add(url_button)

        bot.send_photo(chat_id = message.chat.id,
                        photo = f"{product[3]}",
                        caption = f"""{product[0][0]}\n
                        –ú–∞–≥–∞–∑–∏–Ω : –ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–æ–∫
                        {product[1][0]} : {product[1][1]}""",
                        reply_markup = keyboard)
            
    #                                      –ú–ê–ì–ê–ó–ò–ù 7–®–ê–ì–û–§–§

    bot.send_message(chat_id = message.chat.id,
                        text = "*–ú–∞–≥–∞–∑–∏–Ω : 7—à–∞–≥–æ—Ñ—Ñ*",
                        parse_mode='Markdown')
        
    for counter, product in enumerate(SevenSteps().S_Parse_cheese()):        # –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —É–≤–∏–¥–µ—Ç—å —Ç–æ–ª—å–∫–æ 4 –ø–µ—Ä–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π 
        if counter >= 3: break

        keyboard = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –º–∞–≥–∞–∑–∏–Ω–∞", url = f"https://semishagoff.org{product[2]}")
        keyboard.add(url_button)

        bot.send_photo(chat_id = message.chat.id,
                        photo = f"https://semishagoff.org{product[3]}",
                        caption = f"""{product[0]}\n
                        –ú–∞–≥–∞–∑–∏–Ω : 7—à–∞–≥–æ—Ñ—Ñ
                        –¶–µ–Ω–∞ : {product[1]}""",
                        reply_markup = keyboard)

@bot.message_handler(regexp = "–•–ª–µ–±")
def bread(message : Message) -> None:
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
    markup.row("–ù–∞–∑–∞–¥")
    
    #                                      –ú–ê–ì–ê–ó–ò–ù  –ü–ï–†–ï–ö–†–ï–°–¢–û–ö
    bot.send_message(chat_id = message.chat.id,
                        text = "*–ú–∞–≥–∞–∑–∏–Ω : –ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–æ–∫*",
                        reply_markup = markup,
                        parse_mode='Markdown')
        
    for counter, product in enumerate(Perecrestok().P_Parse_bread()[::-1]):        # –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —É–≤–∏–¥–µ—Ç—å —Ç–æ–ª—å–∫–æ 4 –ø–µ—Ä–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π 
        if counter >= 4: break

        keyboard = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text = "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –º–∞–≥–∞–∑–∏–Ω–∞", url = f"https://spb.perekrestok.ru{product[2]}")
        keyboard.add(url_button)

        bot.send_photo(chat_id = message.chat.id,
                        photo = f"{product[3]}",
                        caption = f"""{product[0][0]}\n
                        –ú–∞–≥–∞–∑–∏–Ω : –ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–æ–∫
                        {product[1][0]} : {product[1][1]}""",
                        reply_markup = keyboard)
            
    #                                      –ú–ê–ì–ê–ó–ò–ù 7–®–ê–ì–û–§–§

    bot.send_message(chat_id = message.chat.id,
                        text = "*–ú–∞–≥–∞–∑–∏–Ω : 7—à–∞–≥–æ—Ñ—Ñ*",
                        parse_mode='Markdown')
        
    for counter, product in enumerate(SevenSteps().S_Parse_bread()):        # –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —É–≤–∏–¥–µ—Ç—å —Ç–æ–ª—å–∫–æ 4 –ø–µ—Ä–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π 
        if counter >= 3: break

        keyboard = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –º–∞–≥–∞–∑–∏–Ω–∞", url = f"https://semishagoff.org{product[2]}")
        keyboard.add(url_button)

        bot.send_photo(chat_id = message.chat.id,
                        photo = f"https://semishagoff.org{product[3]}",
                        caption = f"""{product[0]}\n
                        –ú–∞–≥–∞–∑–∏–Ω : 7—à–∞–≥–æ—Ñ—Ñ
                        –¶–µ–Ω–∞ : {product[1]}""",
                        reply_markup = keyboard)

@bot.message_handler(regexp = "–ö–∞—Ä—Ç–æ—à–∫–∞")
def potato(message : Message) -> None:
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True)
    markup.row("–ù–∞–∑–∞–¥")
    
    #                                      –ú–ê–ì–ê–ó–ò–ù  –ü–ï–†–ï–ö–†–ï–°–¢–û–ö
    bot.send_message(chat_id = message.chat.id,
                        text = "*–ú–∞–≥–∞–∑–∏–Ω : –ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–æ–∫*",
                        reply_markup = markup,
                        parse_mode='Markdown')
        
    for counter, product in enumerate(Perecrestok().P_Parse_potato()[::-1]):        # –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —É–≤–∏–¥–µ—Ç—å —Ç–æ–ª—å–∫–æ 5 –ø–µ—Ä–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π 
        if counter >= 4: break

        keyboard = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text = "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –º–∞–≥–∞–∑–∏–Ω–∞", url = f"https://spb.perekrestok.ru{product[2]}")
        keyboard.add(url_button)

        bot.send_photo(chat_id = message.chat.id,
                        photo = f"{product[3]}",
                        caption = f"""{product[0][0]}\n
                        –ú–∞–≥–∞–∑–∏–Ω : –ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–æ–∫
                        {product[1][0]} : {product[1][1]}""",
                        reply_markup = keyboard)
            
    #                                      –ú–ê–ì–ê–ó–ò–ù 7–®–ê–ì–û–§–§

    bot.send_message(chat_id = message.chat.id,
                        text = "*–ú–∞–≥–∞–∑–∏–Ω : 7—à–∞–≥–æ—Ñ—Ñ*",
                        parse_mode='Markdown')
        
    for counter, product in enumerate(SevenSteps().S_Parse_potato()):        # –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —É–≤–∏–¥–µ—Ç—å —Ç–æ–ª—å–∫–æ 4 –ø–µ—Ä–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π 
        if counter >= 3: break

        keyboard = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –º–∞–≥–∞–∑–∏–Ω–∞", url = f"https://semishagoff.org{product[2]}")
        keyboard.add(url_button)

        bot.send_photo(chat_id = message.chat.id,
                        photo = f"https://semishagoff.org{product[3]}",
                        caption = f"""{product[0]}\n
                        –ú–∞–≥–∞–∑–∏–Ω : 7—à–∞–≥–æ—Ñ—Ñ
                        –¶–µ–Ω–∞ : {product[1]}""",
                        reply_markup = keyboard)

bot.polling(non_stop = True)